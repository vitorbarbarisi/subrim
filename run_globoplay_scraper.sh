#!/bin/bash

# Script wrapper para executar o scraper do Globo Play
# Ativa automaticamente o ambiente virtual e executa o script
# Uso: ./run_globoplay_scraper.sh [URL] [OUTPUT_NAME] [INTERACTION_TIME]

VENV_DIR="globoplay_scraper_env"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VENV_PATH="$SCRIPT_DIR/$VENV_DIR"

# Valores padr√£o
DEFAULT_URL="https://globoplay.globo.com/v/13385190/?s=0s"
DEFAULT_OUTPUT="globoplay_episodes"
DEFAULT_INTERACTION_TIME=60

# Processa par√¢metros
URL="${1:-$DEFAULT_URL}"
OUTPUT_NAME="${2:-$DEFAULT_OUTPUT}"
INTERACTION_TIME="${3:-$DEFAULT_INTERACTION_TIME}"

echo "üé¨ Iniciando Globo Play Scraper..."
echo "üìç URL: $URL"
echo "üìÅ Output: $OUTPUT_NAME"
echo "‚è±Ô∏è  Tempo de intera√ß√£o: ${INTERACTION_TIME}s"

# Valida√ß√µes b√°sicas
if [ -z "$URL" ]; then
    echo "‚ùå URL n√£o pode ser vazia"
    echo "üí° Uso: $0 [URL] [OUTPUT_NAME]"
    exit 1
fi

if [ -z "$OUTPUT_NAME" ]; then
    echo "‚ùå Nome do output n√£o pode ser vazio"
    echo "üí° Uso: $0 [URL] [OUTPUT_NAME]"
    exit 1
fi

# Verifica se o ambiente virtual existe
if [ ! -d "$VENV_PATH" ]; then
    echo "‚ùå Ambiente virtual n√£o encontrado em: $VENV_PATH"
    echo "üí° Execute primeiro: ./install_dependencies.sh"
    exit 1
fi

# Verifica se o script Python existe
if [ ! -f "$SCRIPT_DIR/scrape_globoplay_episodes.py" ]; then
    echo "‚ùå Script Python n√£o encontrado: $SCRIPT_DIR/scrape_globoplay_episodes.py"
    exit 1
fi

# Ativa o ambiente virtual
echo "üîÑ Ativando ambiente virtual..."
source "$VENV_PATH/bin/activate"

if [ $? -ne 0 ]; then
    echo "‚ùå Erro ao ativar ambiente virtual"
    exit 1
fi

# Executa o script Python em modo visual com par√¢metros
echo "üöÄ Executando scraper em modo VISUAL..."
cd "$SCRIPT_DIR"
python scrape_globoplay_episodes.py --url "$URL" --output "$OUTPUT_NAME" --interaction-time "$INTERACTION_TIME"

# Salva o c√≥digo de sa√≠da
EXIT_CODE=$?

# Desativa o ambiente virtual
deactivate

if [ $EXIT_CODE -eq 0 ]; then
    echo ""
    echo "‚úÖ Scraper executado com sucesso!"
    echo "üìÅ Verifique os arquivos gerados:"
    echo "   - ${OUTPUT_NAME}.json"
    echo "   - ${OUTPUT_NAME}.csv"
    echo ""
    echo "üéØ Par√¢metros utilizados:"
    echo "   URL: $URL"
    echo "   Output: $OUTPUT_NAME"
    echo "   Tempo de intera√ß√£o: ${INTERACTION_TIME}s"
else
    echo ""
    echo "‚ùå Erro durante execu√ß√£o (c√≥digo: $EXIT_CODE)"
    echo "üí° Verifique os logs acima para detalhes"
fi

exit $EXIT_CODE
